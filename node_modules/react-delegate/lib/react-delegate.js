'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

exports.setupCachedCallback = setupCachedCallback;
exports.setupDelegate = setupDelegate;
exports.withDelegate = withDelegate;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function setupCachedCallback(method, ctx) {
  var cachedMethod = {};
  return function cachedCallback(id) {
    id = id || '';
    if ((typeof id === 'undefined' ? 'undefined' : _typeof(id)) === 'object') {
      id = JSON.stringify(id);
    }
    if (!cachedMethod[id]) {
      var args = Array.from(arguments);
      cachedMethod[id] = method.bind.apply(method, [ctx].concat(_toConsumableArray(args)));
    }
    return cachedMethod[id];
  };
}

function setupDelegate(obj) {
  var globals = [];

  var delegate = obj && (obj.delegate || obj.props && obj.props.delegate);
  obj.callDelegate = function callDelegate(name) {
    if (delegate && typeof delegate[name] === 'function') {
      for (var _len2 = arguments.length, rest = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        rest[_key2 - 1] = arguments[_key2];
      }

      return delegate[name].apply(delegate, _toConsumableArray(globals.concat(rest)));
    }

    return undefined;
  };

  for (var _len = arguments.length, delegateMethods = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    delegateMethods[_key - 1] = arguments[_key];
  }

  delegateMethods.forEach(function (funcName) {
    if (typeof funcName === 'string') {
      obj[funcName] = obj.callDelegate.bind(null, funcName);
      obj[funcName + 'Cached'] = setupCachedCallback(obj[funcName]);
    }
  });

  return {
    setGlobals: function setGlobals() {
      for (var _len3 = arguments.length, globalArgs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        globalArgs[_key3] = arguments[_key3];
      }

      globals = globals.concat(globalArgs);
    }
  };
}

function withDelegate(methods) {
  return function (component) {
    var withDelegate = function (_React$Component) {
      _inherits(withDelegate, _React$Component);

      function withDelegate(props) {
        _classCallCheck(this, withDelegate);

        var _this = _possibleConstructorReturn(this, (withDelegate.__proto__ || Object.getPrototypeOf(withDelegate)).call(this, props));

        _this.methods = { delegate: props.delegate };
        setupDelegate.apply(undefined, [_this.methods].concat(_toConsumableArray(methods)));
        return _this;
      }

      _createClass(withDelegate, [{
        key: 'render',
        value: function render() {
          var _props = this.props,
              delegate = _props.delegate,
              otherProps = _objectWithoutProperties(_props, ['delegate']);

          var _methods = this.methods,
              d = _methods.delegate,
              allMethods = _objectWithoutProperties(_methods, ['delegate']);

          return _react2.default.createElement(component, _extends({}, otherProps, allMethods));
        }
      }]);

      return withDelegate;
    }(_react2.default.Component);

    return withDelegate;
  };
}